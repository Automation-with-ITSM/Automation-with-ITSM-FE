name: Update issue from Jira

on:
  repository_dispatch:
    types: [jira-issue-updated]

permissions:
  contents: read
  issues: write

jobs:
  update-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: render
        uses: actions/github-script@v7
        with:
          script: |
            const p = context.payload.client_payload || {};
            // 필요시 생성 때와 같은 템플릿을 재렌더링해 본문을 '완성형'으로 교체
            const esc = s => (s||'').toString();
            const body =
`## 📝 개요
${esc(p.description)}

---

**우선순위**: ${esc(p.priority)}  
**라벨**: ${esc(p.labels)}  

🔗 Jira: [${esc(p.key)}](${esc(p.url)})`;
            core.setOutput('body', body);

      - name: Patch GitHub issue
        uses: actions/github-script@v7
        with:
          script: |
            const p = context.payload.client_payload || {};
            const number = Number(p.issue_number);
            if (!number) {
              core.setFailed('Missing issue_number'); return;
            }
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              title: `[${p.key}] ${p.summary}`,
              body: `${{ steps.render.outputs.body }}`
            });
            // 라벨 동기화(있으면 덮어쓰기)
            const labels = (p.labels || '')
              .split(',')
              .map(s => s.trim())
              .filter(Boolean);
            if (labels.length) {
              await github.rest.issues.setLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                labels
              });
            }
