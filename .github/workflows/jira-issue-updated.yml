name: Update issue from Jira

on:
  repository_dispatch:
    types: [jira-issue-updated]

permissions:
  contents: read
  issues: write

jobs:
  update-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: render
        uses: actions/github-script@v7
        with:
          script: |
            const p = context.payload.client_payload || {};
            const esc = (s) => (s ?? '').toString();

            // 백틱(template literal) 대신 배열 + join('\n')로 본문 구성
            const bodyLines = [
              '## Description',
              esc(p.description),
              '',
              '---',
              '',
              `**Priority**: ${esc(p.priority)}`,
              `**Labels**: ${esc(Array.isArray(p.labels) ? p.labels.join(', ') : p.labels)}`,
              '',
              `Jira: [${esc(p.key)}](${esc(p.url)})`
            ];
            const body = bodyLines.join('\n');
            core.setOutput('body', body);

      - name: Patch GitHub issue
        uses: actions/github-script@v7
        with:
          script: |
            const p = context.payload.client_payload || {};
            const number = Number(p.issue_number);
            if (!number) {
              core.setFailed('Missing issue_number in payload'); 
              return;
            }

            // 제목 업데이트
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              title: `[${p.key}] ${p.summary}`,
              body: `${{ steps.render.outputs.body }}`
            });

            // 라벨 동기화 (Jira → GitHub)
            let labels = [];
            if (Array.isArray(p.labels)) {
              labels = p.labels.filter(Boolean);
            } else if (typeof p.labels === 'string') {
              labels = p.labels.split(',').map(s => s.trim()).filter(Boolean);
            }

            if (labels.length) {
              await github.rest.issues.setLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                labels
              });
            }
